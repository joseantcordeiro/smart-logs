# Docker Compose for SMEDREC Audit Server Development
version: '3.8'

services:
  # Audit Server Application
  audit-server:
    build:
      context: ../..
      dockerfile: apps/server/Dockerfile.dev
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
      - DATABASE_URL=postgresql://audit_user:audit_password@postgres:5432/audit_db
      - REDIS_URL=redis://redis:6379
      - AUTH_SECRET=dev-secret-key-change-in-production
      - CORS_ORIGIN=http://localhost:3001,http://localhost:5173
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      # Mount source code for hot reloading in development
      - ../../apps/server/src:/app/apps/server/src:ro
      - ../../packages:/app/packages:ro
    networks:
      - audit-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=audit_db
      - POSTGRES_USER=audit_user
      - POSTGRES_PASSWORD=audit_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - audit-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U audit_user -d audit_db']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true

  # Redis Cache and Queue
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - audit-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  audit-network:
    driver: bridge
